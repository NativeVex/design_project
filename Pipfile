[[source]]
url = "https://pypi.python.org/simple"
verify_ssl = true
name = "pypi"

[packages]
flask = "*"
gunicorn = "*"
wtforms = "*"
pytest = "*"
design_project_b23 = {editable = true, path = "."}
flask_sqlalchemy = "*"
numpy = "*"
psycopg2-binary = "*"

[dev-packages]
pyright = "*"
ipython = "*"

[requires]
python_version = "3.9"

[scripts]
# HEROKU
rmt = "bash -c \"pipenv run hrku-bld && pipenv run hrku-run && pipenv run hrku-logs\""
hrku-bld = "heroku container:push web --app design-project-b23"
hrku-run = "heroku container:release web --app design-project-b23"
hrku-open = "heroku open -a design-project-b23"
hrku-logs = "heroku logs --tail -a design-project-b23"
# DOCKER
lcl = "bash -c \"pipenv run dkr-kill; pipenv run dkr-rm; pipenv run dkr-bld && pipenv run dkr-run\""
dkr-bld = "docker build -t design_project/demo ."
dkr-run = "docker run -p 8080:80 design_project/demo"
# if this doesn't run immediately, know that it takes a minute or two for ports
# to get freed up. Either change 8080 to a larger number or wait.
dkr-kill = "bash -c \"docker ps | awk '{print $1}' | tail -n +2 | xargs -ixxx docker kill xxx\""
dkr-rm = "bash -c \"pipenv run dkr-kill && (docker ps -a | awk '{print $1}' | tail -n +2 | xargs -ixxx docker rm xxx)\""
# VAGRANT
vgt-hard-reset = "vagrant.exe destroy && vagrant.exe up --provision-with build"
vgt-port-fwd = "ssh -NTR 8080:localhost:8080 vagrant@localhost"
vgt-dkr-repl = "vagrant.exe ssh -c 'cd /vagrant && pipenv run dkr-bld && pipenv run dkr-run"
